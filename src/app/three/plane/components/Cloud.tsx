/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { FC } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Node: THREE.Mesh;
  };
  materials: {
    ["lambert2SG.001"]: THREE.MeshStandardMaterial;
  };
};

type Props = JSX.IntrinsicElements["group"] & {
  opacity?: number;
};

export const Cloud: FC<Props> = ({ opacity, ...props }) => {
  const { nodes, materials } = useGLTF("/models/cloud.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Node.geometry}
        material={materials["lambert2SG.001"]}
      >
        <meshStandardMaterial transparent opacity={opacity} />
      </mesh>
    </group>
  );
};

useGLTF.preload("/models/cloud.glb");
